{"version":3,"sources":["webpack:///webpack/bootstrap a7238be3310b8d8d7047","webpack:///./components/controller/autocomplete-control.js","webpack:///./components/model/autocomplete.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a7238be3310b8d8d7047\n **/","window.onload = function () {\r\n\r\n    var Autocomplete = require('../model/autocomplete.js');\r\n\r\n    var container = ['foo', 'bar', 'baz', 'hello', 'by', 'wut', 'hell', 'he'];\r\n\r\n    var ac = new Autocomplete();\r\n\r\n    var input = document.querySelector('#tags');\r\n    var listOFFound = document.querySelector('.complete-strings');\r\n\r\n    input.addEventListener('input', function (e) {\r\n        listOFFound.innerHTML = '';\r\n        console.log(listOFFound);\r\n        ac.addValue(input.value);\r\n        console.log(ac.string);\r\n        var completeStrings = ac.checkString(container);\r\n        for (var i = 0; i < completeStrings.length; i++) {\r\n            var newLi = document.createElement('li');\r\n            newLi.innerHTML = completeStrings[i];\r\n            console.log(completeStrings[i]);\r\n            document.querySelector('.complete-strings').appendChild(newLi);\r\n        }\r\n    });\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/controller/autocomplete-control.js\n ** module id = 0\n ** module chunks = 0\n **/","function Autocomplete () {\r\n  this.string = '';\r\n}\r\n\r\nAutocomplete.prototype.addValue = function (str) {\r\n  var tmp = str.split(\" \");\r\n  this.string = tmp[tmp.length - 1];\r\n}\r\nAutocomplete.prototype.checkString = function (arr) {\r\n  var a = arr.filter((str) => {\r\n    if (this.string === \"\") {\r\n      return \"\";\r\n    }\r\n    if (this.string === str.substring(0, this.string.length)) {\r\n      return str;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\nmodule.exports = Autocomplete;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/model/autocomplete.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}